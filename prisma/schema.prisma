generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Proposal {
  id          String             @id @default(uuid())
  clientId    String?
  client      Client?            @relation(fields: [clientId], references: [id])
  projectName String
  notes       String?
  signature   Json?
  createdAt   DateTime           @default(now())
  lineItems   ProposalLineItem[]
  invoices    Invoice[]

  @@index([clientId])
  @@index([createdAt])
}

model ProposalLineItem {
  id          String   @id @default(uuid())
  description String
  amount      Decimal  @db.Decimal(12, 2)
  proposalId  String
  proposal    Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)

  @@index([proposalId])
}

// Basic user and email magic-link auth
enum Role {
  ADMIN
  USER
}

model User {
  id              String           @id @default(uuid())
  email           String           @unique
  name            String?
  role            Role             @default(USER)
  onboarded       Boolean          @default(false)
  lastLoginAt     DateTime?
  passwordHash    String?
  createdAt       DateTime         @default(now())
  magicLinkTokens MagicLinkToken[]

  @@index([createdAt])
}

model MagicLinkToken {
  id        String   @id @default(uuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [email], references: [email])

  @@index([email])
  @@index([createdAt])
  @@index([expiresAt])
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([email])
  @@index([createdAt])
  @@index([expiresAt])
}

// CRM / PM core models
enum ClientType {
  RESIDENTIAL
  COMMERCIAL
  MARINA
}

model Client {
  id        String     @id @default(uuid())
  name      String
  email     String?
  phone     String?
  location  String?
  type      ClientType @default(RESIDENTIAL)
  createdAt DateTime   @default(now())
  proposals Proposal[]
  projects  Project[]
  invoices  Invoice[]

  @@index([name])
  @@index([type])
  @@index([createdAt])
}

enum LeadStatus {
  NEW
  QUALIFIED
  PROPOSAL
  CONVERTED
  LOST
}

model Lead {
  id             String     @id @default(uuid())
  name           String
  contactEmail   String?
  contactPhone   String?
  companyName    String?
  status         LeadStatus @default(NEW)
  source         String?
  notes          String?
  createdAt      DateTime   @default(now())
  conversionDate DateTime?

  @@index([status])
  @@index([createdAt])
}

enum ProjectType {
  SEAWALL
  DOCK
  RETAINING
  REPAIR
  OTHER
}

enum ProjectStatus {
  ACTIVE
  COMPLETED
  ON_HOLD
}

model Project {
  id        String        @id @default(uuid())
  name      String
  clientId  String?
  client    Client?       @relation(fields: [clientId], references: [id])
  type      ProjectType   @default(OTHER)
  status    ProjectStatus @default(ACTIVE)
  budget    Decimal?      @db.Decimal(12, 2)
  createdAt DateTime      @default(now())
  invoices  Invoice[]

  @@index([status])
  @@index([type])
  @@index([createdAt])
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  OVERDUE
}

model Invoice {
  id         String        @id @default(uuid())
  clientId   String?
  client     Client?       @relation(fields: [clientId], references: [id])
  projectId  String?
  project    Project?      @relation(fields: [projectId], references: [id])
  proposalId String?
  proposal   Proposal?     @relation(fields: [proposalId], references: [id])
  status     InvoiceStatus @default(DRAFT)
  total      Decimal       @db.Decimal(12, 2)
  notes      String?
  createdAt  DateTime      @default(now())
  lineItems  InvoiceLineItem[]

  @@index([clientId])
  @@index([projectId])
  @@index([proposalId])
  @@index([createdAt])
}

model InvoiceLineItem {
  id         String   @id @default(uuid())
  description String
  amount      Decimal  @db.Decimal(12, 2)
  invoiceId   String
  invoice     Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@index([invoiceId])
}
