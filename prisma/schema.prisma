generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Proposal {
  id          String             @id @default(uuid())
  clientName  String
  clientEmail String
  projectName String
  notes       String?
  createdAt   DateTime           @default(now())
  lineItems   ProposalLineItem[]
}

model ProposalLineItem {
  id          String   @id @default(uuid())
  description String
  amount      Decimal  @db.Decimal(12, 2)
  proposalId  String
  proposal    Proposal @relation(fields: [proposalId], references: [id], onDelete: Cascade)
}

// Basic user and email magic-link auth
enum Role {
  ADMIN
  USER
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  name        String?
  role        Role     @default(USER)
  onboarded   Boolean  @default(false)
  lastLoginAt DateTime?
  passwordHash String?
  createdAt   DateTime @default(now())
}

model MagicLinkToken {
  id         String   @id @default(uuid())
  email      String
  token      String   @unique
  expiresAt  DateTime
  used       Boolean  @default(false)
  createdAt  DateTime @default(now())
  // Optional relation to user by email (not enforced)
}

model PasswordResetToken {
  id         String   @id @default(uuid())
  email      String
  token      String   @unique
  expiresAt  DateTime
  used       Boolean  @default(false)
  createdAt  DateTime @default(now())
}


